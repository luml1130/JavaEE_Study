<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须在当前项目中是唯一的 -->
<mapper namespace="com.luml.mybatis1.domain.User">

	<!-- 当前文件中的sql使用二级缓存 -->
	<!--指定使用Ehcache缓存-->
	<!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->

	<!-- 抽取SQL -->
	<sql id="allColumns">
		id,name,password,address
	</sql>

	<!-- select标签中的sql为查询语句 -->
	<!-- 
		id:为当前sql的唯一标识
		parameterType:参数类型
		resultType:结果类型
	 -->
	<select useCache="true" id="selectUserById" parameterType="int" resultType="User">
		select 
			<include refid="allColumns"/>
		 from mybaits_user where id = #{id}
	</select>
	
	<!-- 查询所有User -->
	<select id="selectAll" resultType="User">
		select 
			<include refid="allColumns"/>
		 from mybaits_user
	</select>
	
	<!-- 根据Id删除User -->
	<delete id="deleteUserById" parameterType="int">
		delete from mybaits_user where id = #{id}
	</delete>
	
	<!-- 插入数据 -->
	<insert id="saveUser" parameterType="User">
		insert into mybaits_user(name,password,address) values (#{name},#{password},#{address})
	</insert>
	
	<!-- 根据Id修改用户 :解决方案动态sql-->
	<update id="updateUserById" parameterType="User">
		update mybaits_user set
								name = #{name},
								password = #{password},
								address = #{address}
							where id = #{id}
	</update>
	
	<!-- 模糊查询 -->
	<select id="selectUsersByNameLike" resultType="User" parameterType="User">
		select 
			<include refid="allColumns"/>
			from mybaits_user
			where name like '%${name}%'
	</select>
	<!-- 模糊查询，参数为Map类型 -->
	<select id="selectUsersByNameLike2" resultType="User" parameterType="hashmap">
		select 
			<include refid="allColumns"/>
			from mybaits_user
			where name like '%${name}%'
	</select>
	
	<!-- 动态sql：查询 -->
	<select id="selectUsersByCondition" parameterType="User" resultType="User">
		select <include refid="allColumns"/>
			from mybaits_user
			where 1 = 1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="address != null">
				and address = #{address}
			</if>
	</select>
	
	<select id="selectUsersByCondition2" parameterType="User" resultType="User">
		select <include refid="allColumns"/>
			from mybaits_user
			<where>
				<if test="id != null">
					and id = #{id}
				</if>
				<if test="name != null">
					and name = #{name}
				</if>
				<if test="address != null">
					and address = #{address}
				</if>
			</where>
	</select>
	
	<!-- 动态sql：更新 -->
	<update id="updateUserByCondition" parameterType="User">
		update mybaits_user
			<set>
				<if test="name != null">
					name = #{name},
				</if>
				<if test="password != null">
					password = #{password},
				</if>
				<if test="address != null">
					address = #{address},
				</if>
			</set>
			where id = #{id}
	</update>
	
	<!-- 批量插入数据 -->
	<insert id="saveUserBatch" parameterType="map">
		insert into mybaits_user(name,password,address)
			values 
			<foreach collection="userList" item="user" separator=",">
				(#{user.name},#{user.password},#{user.address})
			</foreach>
	</insert>
	
	<!-- 根据Id的集合查询多个数据 -->
	<select id="selectUsersByIds" parameterType="map" resultType="User">
		select * from mybaits_user where id in
			<foreach open="(" close=")" collection="ids" item="id" separator=",">
				#{id}
			</foreach>
		
	</select>
</mapper>